# Generated by roxygen2 (4.1.0): do not edit by hand

S3method("$","...")
S3method("$<-","...")
S3method("%()%","...")
S3method("%()%",default)
S3method("%<<%","...")
S3method("%<<%",default)
S3method("%<<<%","...")
S3method("%<<<%",default)
S3method("%__%","...")
S3method("%__%",default)
S3method("%__%....","...")
S3method("%__%....",default)
S3method("%__%.default","...")
S3method("%__%.default",default)
S3method("[","...")
S3method("[",bind)
S3method("[",chain)
S3method("[",mkchain)
S3method("[<-","...")
S3method("[<-",bind)
S3method("[<-....","...")
S3method("[<-....","default")
S3method("[[","...")
S3method("[[<-","...")
S3method("environments<-",...)
S3method("expressions<-",...)
S3method("index<-",data.frame)
S3method("names","...")
S3method("print","...")
S3method(as.dots,"...")
S3method(as.dots,default)
S3method(as.list,"...")
S3method(environments,...)
S3method(expressions,...)
S3method(format,...)
S3method(format,deparse)
S3method(index,data.frame)
S3method(is.missing,"...")
S3method(is.missing,default)
S3method(print,bind)
S3method(unpack,...)
export("%#%")
export("%'%")
export("%()%")
export("%<<%")
export("%<<<%")
export("%<~%")
export("%__%")
export("%__%....")
export("%|>%")
export("%||%")
export("environments<-")
export("expressions<-")
export("index<-")
export(alter)
export(ammoc)
export(arg_dots)
export(arg_env)
export(arg_expr)
export(as.dots)
export(as.dots.literal)
export(bind)
export(chain)
export(curl)
export(curr)
export(dots)
export(dots2env)
export(dots_environments)
export(dots_expressions)
export(dots_missing)
export(dots_names)
export(dots_unpack)
export(env2dots)
export(environments)
export(expand_macros)
export(expand_macros_q)
export(expressions)
export(find_macros)
export(fun)
export(index)
export(inject)
export(interply)
export(interpolate)
export(is.missing)
export(list_missing)
export(list_quote)
export(macro)
export(macro_cache_report)
export(missing_value)
export(mkchain)
export(mply)
export(put)
export(qe)
export(qeply)
export(qq)
export(qqply)
export(quote_args)
export(quoting.env)
export(run_as_command)
export(template)
export(unpack)
export(with_arg)
import(compiler)
useDynLib(vadr,"_arg_env")
useDynLib(vadr,"_arg_expr")
useDynLib(vadr,"_as_dots_literal")
useDynLib(vadr,"_dots_names")
useDynLib(vadr,"_dots_to_env")
useDynLib(vadr,"_dots_unpack")
useDynLib(vadr,"_dotslist_to_list")
useDynLib(vadr,"_env_to_dots")
useDynLib(vadr,"_expressions_and_pointers")
useDynLib(vadr,"_find_subst_expressions_list")
useDynLib(vadr,"_getpromise_in")
useDynLib(vadr,"_list_to_dotslist")
useDynLib(vadr,"_mutate_environments")
useDynLib(vadr,"_mutate_expressions")
useDynLib(vadr,"_object_pointers")
